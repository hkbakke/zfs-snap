cmds:
  ssh: /usr/bin/ssh
  zfs: /sbin/zfs
  split: /usr/bin/split
  cat: /bin/cat

# The policies have reasonable names in this file, but you can name them as
# you please, and have as many as you want.

policies:
  snapshots:
    type: snapshot

    # Label defaults to policy name if not set (this is valid for all policies)
    label: hourly

    # If you leave 'include' unset, all datasets will be snapshoted by default
    include:
      - '*'
    exclude:
      - 'pool-2/backup'
    keep:
      minimum: 4   # Keep at least this many snapshots regardless of retention
                   # policy
      hourly: 24   # How many hourly snapshots to keep
      daily: 31    # How many daily snapshots to keep
      weekly: 5    # How many weekly snapshots to keep
      monthly: 12  # How many montly snapshots to keep
      yearly: 2    # How many yearly snapshots to keep

    # If not set recursive defaults to 'no'
    recursive: no

  # A minimal config version that snapshots all datasets with no excludes
  # non-recursively
  daily:
    type: snapshot
    keep:
      daily: 31

  # You can have many include and exclude patterns
  monthly:
    type: snapshot
    include:
      - 'pool-1*'
      - 'pool-2*'
    exclude:
      - 'pool-1/backup'
      - 'pool-2/backup'
    keep:
      daily: 31

  recursive-1:
    # Here we are doing recursive snapshots on the top level only, excluding
    # all nested datasets.
    type: snapshot
    include:
      - '*'
    exclude:
      - '*/*'
    keep:
      hourly: 24
    recursive: yes

  replicate-vms:
    # The destination dataset _must_ be unused, preferable not even created,
    # as zfssnap will ensure it is looking like the source, and even destroying
    # the remote dataset recursively if --reset is given, to ensure compliance.
    type: replicate
    source:
      dataset: 'pool-1/vms-1'
    destination:
      dataset: 'pool-2/backup/vms-1'

      # Leave unset if local destination dataset. Not needed if the remote user
      # is the same as the user running the script.
      ssh_user: root

      # Leave unset if local destination dataset
      host: remotehost
      cmds:
        zfs: /sbin/zfs
    keep:
      minimum: 6  # Keep at least this many snapshots regardless of retention
                  # policy. One snapshot is always kept for replication
                  # policies, regardless of this setting, to ensure incremental
                  # send is possible without breaking the snapshot dependency.
                  # Default: 0
      hourly: 24  # How many hourly snapshots to keep. Default: 0
      daily: 7    # How many daily snapshots to keep. Default: 0
      weekly: 5   # How many weekly snapshots to keep. Default: 0
      monthly: 0  # How many montly snapshots to keep. Default: 0
      yearly: 0   # How many yearly snapshots to keep. Default: 0

  # Example configuration for the sending side when replicating a dataset by
  # file. If the send output exceeds split_size a new segment is generated.
  # This is to be able to start transferring segments from the destination dir
  # before having completed the whole send operation, which could save a lot of
  # time if the send datastream becomes large.
  send-to-file:
    type: send_to_file
    label: replicate-disconnected

    # If not set file_prefix defaults to 'zfssnap'
    file_prefix: xyz
    source:
       dataset: 'pool-1/vms-1'

       # If not set split_size defaults to '1G'
       split_size: 1G

       # If not set suffix_length defaults to 4
       suffix_length: 4
    destination:
       dir: /srv/outgoing
    keep:
      minimum: 4  # Keep at least this many snapshots regardless of retention
                  # policy. One snapshot is always kept for replication
                  # policies, regardless of this setting, to ensure incremental
                  # send is possible without breaking the snapshot dependency.
                  # Default: 0
      hourly: 24  # How many hourly snapshots to keep. Default: 0
      daily: 7    # How many daily snapshots to keep. Default: 0
      weekly: 5   # How many weekly snapshots to keep. Default: 0
      monthly: 0  # How many montly snapshots to keep. Default: 0
      yearly: 0   # How many yearly snapshots to keep. Default: 0

  # Example configuration for the receiving side when replicating a dataset by
  # file. The file_prefix and label must match that of the sending side.
  # There is no keep policy for the receiving end as this is handled by the
  # sending side.
  receive-from-file:
    type: receive_from_file
      label: replicate-disconnected
      file_prefix: xyz
      source:
        dir: /srv/incoming
      destination:
        dataset: 'pool-1/backup/test-1'
